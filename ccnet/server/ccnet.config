<cruisecontrol xmlns:cb="urn:ccnet.config.builder" xmlns="http://thoughtworks.org/ccnet/1/8">
  <!-- Local configuration, if any
         This configuration can predefine the following elements:
           - MainDir
           - WebURL
  -->
  <cb:if expr="File.Exists('./ccnet.config.local')">
    <cb:include href="./ccnet.config.local" />
  </cb:if>
  
  <!-- Global configuration -->
  <cb:ifndef name="MainDir">
    <cb:define MainDir="c:\Prog\build_auto" />
  </cb:ifndef>
  <cb:define SourcesDir="$(MainDir)\sources" />
  <cb:define LogsDir="$(MainDir)\logs" />
  <cb:define ArtifactsDir="$(MainDir)\artifacts" />
  <cb:define WorkingDir="$(MainDir)\working" />
  <cb:define StateDir="$(MainDir)\state" />
  <cb:define CCNetDir="c:\program files (x86)\CruiseControl.Net" />
  <cb:define BuildResultsDir="C:\Prog\CruiseControl.NET\tools\build_results" />
  <cb:define SVN_URL_JCL="https://jcl.svn.sourceforge.net/svnroot/jcl/trunk/jcl" />
  <cb:define SVN_URL_JVCL="https://jvcl.svn.sourceforge.net/svnroot/jvcl/trunk/jvcl" />
  <cb:define SVN_User="" />
  <cb:define SVN_Password="" />
  <cb:define SVN_CommitUser="" />
  <cb:define SVN_CommitPassword="" />
  <cb:define SVN_ExePath="c:\program files (x86)\subversion\bin" />
  <cb:define GIT_URL_JCL="https://github.com/project-jedi/jcl.git" />
  <cb:define GIT_URL_JVCL="https://github.com/project-jedi/jvcl.git" />
  <cb:define GIT_ExePath="c:\program files\git\bin" />
  <cb:define BuildmasterEmail="buildmaster@delphi-jedi.org" />
  <cb:define BuildmasterName="Buildmaster" />
  <cb:ifndef name="WebURL">
    <cb:define WebURL="http://localhost/ccnet/server/local" />
  </cb:ifndef>

  <cb:define name="ContinuousEmailUsers">
    <user name="obones" group="buildmaster" address="olivier@obones.com" />
    <user name="list" group="buildmaster" address="projectjedi-automatic-builds@lists.sourceforge.net" />
  </cb:define>
  
  <!-- Block for SVN options -->
  <cb:define name="SVN_options">
    <workingDirectory>$(SourcesDir)\$(SourcesSubDir)</workingDirectory>
    <username>$(SVN_User)</username>
    <password>$(SVN_Password)</password>
    <executable>$(SVN_ExePath)\svn.exe</executable>
    <authCaching>None</authCaching>
    <timeout units="minutes">40</timeout>
    <!--
    <webUrlBuilder type="websvn">
      <url>$(SVN_WebSVNBaseURL)/revision.php?repname=$(SVN_RepositoryName)&amp;isdir=1&amp;rev={1}</url>
    </webUrlBuilder>
    -->
    <!--<deleteObstructions>true</deleteObstructions>-->
    <forceUpdate>true</forceUpdate>
    <!--<checkExternals>true</checkExternals>--> 
    <cb:SVN_ExtraOptions />
  </cb:define>
  
  <!-- Block for GIT options -->
  <cb:define name="GIT_options">
    <workingDirectory>$(SourcesDir)\$(SourcesSubDir)</workingDirectory>
    <executable>$(GIT_ExePath)\git.exe</executable>
    <fetchSubmodules>True</fetchSubmodules>
    <timeout units="minutes">40</timeout>
    <!--
    <webUrlBuilder type="websvn">
      <url>$(SVN_WebSVNBaseURL)/revision.php?repname=$(SVN_RepositoryName)&amp;isdir=1&amp;rev={1}</url>
    </webUrlBuilder>
    -->
    <cb:GIT_ExtraOptions />
  </cb:define>
  
  <!-- Block for email sending -->
  <cb:define name="EmailPublisher_base">
    <email includeDetails="true">
      <from>$(BuildmasterEmail)</from>
      <mailhost>$(mailhost)</mailhost>
      <mailhostUsername>$(mailhostUsername)</mailhostUsername>
      <mailhostPassword>$(mailhostPassword)</mailhostPassword>
      <users>
        <cb:Users />
      </users>
      <groups>
        <group name="developers">
          <notifications>
            <notificationType>Failed</notificationType>
            <notificationType>Fixed</notificationType>
          </notifications>
        </group>
        <group name="projectmanagers">
          <notifications>
            <notificationType>Failed</notificationType>
            <notificationType>Fixed</notificationType>
          </notifications>
        </group>
        <group name="buildmaster">
          <notifications>
            <notificationType>Always</notificationType>
          </notifications>
        </group>
        <group name="dropped">
          <notifications>
            <notificationType>Exception</notificationType>
          </notifications>
        </group>
      </groups>
      <converters>
        <regexConverter find="$" replace="@sourceforge.net" />
      </converters>
      <xslFiles>
        <xslFile>xsl\header.xsl</xslFile>
        <xslFile>xsl\jedi_all.xsl</xslFile>
        <xslFile>xsl\buildresults-jedi.xsl</xslFile>
        <xslFile>xsl\modifications-jedi.xsl</xslFile>
      </xslFiles>
      <cb:ExtraOptions />
    </email>
  </cb:define>
    
  <cb:define name="EmailPublisher">
    <cb:scope>
      <cb:define name="ExtraOptions">
        <modifierNotificationTypes>
          <NotificationType>Failed</NotificationType>
          <NotificationType>Fixed</NotificationType>
        </modifierNotificationTypes>
      </cb:define>
      <cb:EmailPublisher_base />
    </cb:scope>
  </cb:define>
  
  <cb:define name="ExecInstaller">
    <cb:define SourcesSubDir="$(ProjectFolderName)\$(ProjectFolderName)" />
    <cb:define XMLFileName="$(SourcesDir)\$(SourcesSubDir).xml" />
    <exec>
      <description>Deleting previous result xml file in $(SourcesSubDir)</description>
      <executable>c:\windows\system32\cmd</executable>
      <buildArgs>/c del $(XMLFileName)</buildArgs>
      <baseDirectory>$(SourcesDir)\$(SourcesSubDir)</baseDirectory>
      <successExitCodes>0,1</successExitCodes>
    </exec>
    <exec>
      <description>Running installer in $(SourcesSubDir)</description>
      <executable>c:\windows\system32\cmd</executable>
      <buildArgs>/c $(SourcesDir)\$(SourcesSubDir)\install.bat $(InstallerParameters)</buildArgs>
      <baseDirectory>$(SourcesDir)\$(SourcesSubDir)</baseDirectory>
      <buildTimeoutSeconds>5400</buildTimeoutSeconds>
      <successExitCodes>0,1</successExitCodes>
    </exec>
    <conditional>
      <conditions>
        <fileExistsCondition file="$(XMLFileName)" />
      </conditions>
      <tasks>
        <merge>
          <files>
            <file>$(XMLFileName)</file>
          </files>
        </merge>
        <exec>
          <description>Copying xml result to build results dir</description>
          <executable>c:\windows\system32\cmd</executable>
          <buildArgs>/c copy /Y $(XMLFileName) $(BuildResultsDir)</buildArgs>
          <baseDirectory>$(SourcesDir)</baseDirectory>
          <buildTimeoutSeconds>60</buildTimeoutSeconds>
          <successExitCodes>0,1</successExitCodes>
        </exec>
        <exec>
          <description>Commiting build results dir</description>
          <executable>$(GIT_ExePath)\git</executable>
          <buildArgs>commit --author "$(BuildmasterName) &lt;$(BuildmasterEmail)&gt;" --message "Continuous build result" $(ProjectFolderName).xml</buildArgs>
          <baseDirectory>$(BuildResultsDir)</baseDirectory>
          <buildTimeoutSeconds>120</buildTimeoutSeconds>
          <successExitCodes>0,1</successExitCodes>
        </exec>
        <exec>
          <description>Pushing build results dir</description>
          <executable>$(GIT_ExePath)\git</executable>
          <buildArgs>push</buildArgs>
          <baseDirectory>$(BuildResultsDir)</baseDirectory>
          <buildTimeoutSeconds>120</buildTimeoutSeconds>
          <successExitCodes>0,1</successExitCodes>
        </exec>
      </tasks>
      <elseTasks>
        <nullTask simulateFailure="true" simulateFailureMessage="$(SourcesDir)\$(SourcesSubDir).xml was not generated, looks like a severe issue with the installer" />
      </elseTasks>
    </conditional>
  </cb:define>

  <cb:define name="JCL_SourceControl">
    <git>
      <cb:scope SourcesSubDir="jcl">
        <cb:define name="GIT_ExtraOptions">
          <repository>$(GIT_URL_JCL)</repository>
        </cb:define>
        <cb:GIT_options />
      </cb:scope>
    </git>
  </cb:define>
  
  <cb:define name="JVCL_SourceControl">
    <git>
      <cb:scope SourcesSubDir="jvcl">
        <cb:define name="GIT_ExtraOptions">
          <repository>$(GIT_URL_JVCL)</repository>
        </cb:define>
        <cb:GIT_options />
      </cb:scope>
    </git>
  </cb:define>
  
  <cb:define name="JCL_ExecInstaller">
    <cb:scope ProjectFolderName="jcl" InstallerParameters="/ContinueOnTargetError /AutoAcceptMPL /AcceptInformations /AcceptConfirmations /AcceptWarnings /AcceptErrors /CloseOnFailure /CloseOnSuccess /Install &quot;/XMLResult=$(XMLFileName)&quot; /IncludeLogFilesInXML /DeletePreviousLogFiles">
      <cb:ExecInstaller />
    </cb:scope>
  </cb:define>
  
  <cb:define name="JVCL_ExecInstaller">
    <cb:scope ProjectFolderName="jvcl" InstallerParameters="--ignore-ide --autoinstall --forceinstall --build --autoclose --autoclose-error --continue-on-error &quot;--XMLResult=$(XMLFileName)&quot; --delete-previous-log-files --include-log-files-in-XML">
      <cb:ExecInstaller />
    </cb:scope>
  </cb:define>
      
  <cb:define name="JCL_CleanUp">
  </cb:define>

  <cb:define name="JVCL_CleanUp">
  </cb:define>

  <!-- **********************************************************************************************
                               CruiseControl Projects (base)
       ********************************************************************************************** -->
  <!-- Continuous build project during the day (base) -->
  <cb:define name="project_base">
    <cb:ifndef name="ScheduleTriggers">
      <cb:define name="ScheduleTriggers" />
    </cb:ifndef>
    <cb:ifndef name="Users">
      <cb:define name="Users" />
    </cb:ifndef>
    
    <project name="$(build_name)" queue="AllProjectsQueue">
      <category>$(category)</category>
      <description>$(build_name) Build</description>
      <artifactDirectory>$(ArtifactsDir)\$(build_name)</artifactDirectory>
      <workingDirectory>$(WorkingDir)\$(build_name)</workingDirectory>
      <state type="state" directory="$(StateDir)" />
      <webURL>$(WebURL)/project/$(build_name)/ViewLatestBuildReport.aspx</webURL>
      <prebuild>
      </prebuild>
      <sourceControlErrorHandling>ReportOnRetryAmount</sourceControlErrorHandling>
      <maxSourceControlRetries>5</maxSourceControlRetries>
      <stopProjectOnReachingMaxSourceControlRetries>true</stopProjectOnReachingMaxSourceControlRetries>
      <sourcecontrol type="multi">
        <sourceControls>
          <cb:SourceControls/>
        </sourceControls>
      </sourcecontrol>
      <tasks>
        <cb:Tasks />
      </tasks>
      <publishers>
        <xmllogger logDir="$(LogsDir)\$(build_name)" />
        <cb:scope>
          <cb:EmailPublisher />
        </cb:scope>
        <cb:ExtraPublishers />
      </publishers>
      <triggers>
        <cb:ScheduleTriggers />
      </triggers>
    </project>
  </cb:define>
  
  <cb:define name="continuous_base">
    <cb:scope category="Automatic">
      <cb:define name="ScheduleTriggers">
        <scheduleTrigger time="01:40" name="Scheduled" />
      </cb:define>
      <cb:define name="Users">
        <cb:ContinuousEmailUsers />
      </cb:define>
      <cb:project_base />
    </cb:scope>
  </cb:define>
  
  <!-- **********************************************************************************************
                               CruiseControl Projects
       ********************************************************************************************** -->
  <cb:scope build_name="Continuous">
    <cb:define name="SourceControls">
      <cb:JCL_SourceControl />
      <cb:JVCL_SourceControl />
    </cb:define>
    <cb:define name="Tasks">
      <cb:JCL_ExecInstaller />
      <cb:JVCL_ExecInstaller />
    </cb:define>
    <cb:define name="ExtraPublishers">
      <cb:JCL_CleanUp />
      <cb:JVCL_CleanUp />
    </cb:define>
    <cb:continuous_base />
  </cb:scope>
  
  <cb:scope build_name="JCL only" category="Manual">
    <cb:define name="SourceControls">
      <cb:JCL_SourceControl />
    </cb:define>
    <cb:define name="Tasks">
      <cb:JCL_ExecInstaller />
    </cb:define>
    <cb:define name="ExtraPublishers">
      <cb:JCL_CleanUp />
    </cb:define>
    <cb:project_base />
  </cb:scope>
  
  <cb:scope build_name="JVCL only" category="Manual">
    <cb:define name="SourceControls">
      <cb:JVCL_SourceControl />
    </cb:define>
    <cb:define name="Tasks">
      <cb:JVCL_ExecInstaller />
    </cb:define>
    <cb:define name="ExtraPublishers">
      <cb:JVCL_CleanUp />
    </cb:define>
    <cb:project_base />
  </cb:scope>

  <cb:scope build_name="JCL Daily Zips">
    <cb:define makedistDir="$(SourcesDir)\jcl_daily\thirdparty\makedist" />
    <cb:define name="Users">
      <user name="obones" group="buildmaster" address="olivier@obones.com" />
      <!--<cb:ContinuousEmailUsers />-->
    </cb:define>
    <project name="$(build_name)" queue="Daily">
      <category>Automatic</category>
      <description>JCL daily zip generation</description>
      <artifactDirectory>$(ArtifactsDir)\$(build_name)</artifactDirectory>
      <workingDirectory>$(WorkingDir)\$(build_name)</workingDirectory>
      <state type="state" directory="$(StateDir)" />
      <webURL>$(WebURL)/project/$(build_name)/ViewLatestBuildReport.aspx</webURL>
      <prebuild>
      </prebuild>
      <sourceControlErrorHandling>ReportOnRetryAmount</sourceControlErrorHandling>
      <maxSourceControlRetries>5</maxSourceControlRetries>
      <stopProjectOnReachingMaxSourceControlRetries>true</stopProjectOnReachingMaxSourceControlRetries>
      <!--<sourcecontrol type="multi">
        <sourceControls>
          <cb:JCL_SourceControl />
          <cb:JVCL_SourceControl />
        </sourceControls>
      </sourcecontrol>-->
      <tasks>
        <!--<exec>
          <description>Copying makedist from $(SourcesDir)\makedist to $(makedistDir)</description>
          <executable>c:\windows\system32\cmd</executable>            
          <buildArgs>/c copy /Y $(SourcesDir)\makedist\*.* $(makedistDir)\</buildArgs>
          <baseDirectory>$(SourcesDir)</baseDirectory>
          <successExitCodes>0,1</successExitCodes>
        </exec> -->
        <exec>
          <description>Running makedist in $(makedistDir)</description>
          <executable>$(makedistDir)\makeDist.exe</executable>
          <buildArgs>/c=JclTesting.xml /s=jcl-daily-source /x</buildArgs>
          <baseDirectory>$(makedistDir)</baseDirectory>
          <buildTimeoutSeconds>5400</buildTimeoutSeconds>
          <successExitCodes>0</successExitCodes>
          <environment>
            <variable name="CURDIR" value="$(makedistDir)" />
            <variable name="GIT" value="$(GIT_ExePath)\git.exe" />
            <variable name="WINSCP" value="C:\Program Files (x86)\WinSCP\WinSCP.exe" />
            <variable name="JEDIHELP" value="." />
          </environment>
        </exec>
      </tasks>
      <publishers>
        <xmllogger logDir="$(LogsDir)\$(build_name)" />
        <cb:scope>
          <cb:EmailPublisher />
        </cb:scope>
      </publishers>
      <triggers>
        <scheduleTrigger time="01:39" buildCondition="ForceBuild" name="Scheduled" />
      </triggers>
    </project>
  </cb:scope>
  
</cruisecontrol>